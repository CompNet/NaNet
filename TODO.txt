Dynamic network extraction
   - Implement window-based approach
   - Implement narrative smoothing (or use Xavier's version)
	 - (test on the toy example)

Stats part:
- Goal: study the effect of the extraction parameters
	- window size
	- overlap
	- extraction method (not sure what I meant here)
- Methods:
	- standard topological measures:
		- how they evolve with the parameters
		- for nodal measures, we could study how they are rank-correlated (for 2 different parameter values)
		  (in addition to studying changes in absolute value)
	- also consider global similarity measures between graphs
	- Identify which nodal measures are used in apps of char nets (in the literature)
	  >> study how these are affected by extraction parameters
	- assess the difference between parameters on a simple task such as story segmentation (ref=scenes or volumes?)
	  >> maybe in a different paper

- Scenes: weights=occurrences vs. durations
  - compare them, are they correlated?

- Plots:
  - Plots combining the different assortativities / centralizations? 
    (for comparison purposes. not sure of the interest)
  - Some boxes are missing in boxplots (when the corresponding violins are there)
    >> probably just because violin works on "only equal values" cases, not boxplots
  
- Segmentation task: 
  - requires dynamic nets
  - maybe do that in a separate paper
- This first work:
  - descriptive study of the scene-based networks
  - compare with other fictional character networks properties
  - assess window-based approaches as approximations
    - compare how good the window corresponding to the typical scene length is
  - study the effect on some simple tools from the literature 
    (eg main character detection through combination of centrality measures)

Method to compare between bédés
  - just compare scene-based graphs (through their topological measures)
    >> can be done through tables (?)
  - also compare to other types of character networks
  - compare the best window-based parameters

Plot comparison  
  - Compare nets extracted from one-shot albums (e.g. Astérix): 
    can we find archetypical roles coming back in each album?
    >> need a way to find narratively equivalent characters (nodes) from album to album
    - Can we distinguish between the different writers (uderzo, gosciny, ferri)?
  - We'll probably need to perform some kind of alignment task at some point

Changes:
  - remove links whose weight is under some threshold (e.g. determined from some stat computed over the whole node/link set)
    >> OK for the scenes, but how to do that for the window-based nets?
  - plot centrality changes over only the top k most central nodes
    (don't we care about the other characters?)
    >> or consider classes of centrality? (use some clustering tool to detect them automatically)
 
what if we remove characters occurring only in two scenes (or windows)?
  - those are probably extra, and most authors do some filtering like this
  >> does this affect important graph properties such as connectedness? 

VOLUMES/ARCS
- when recording the graphml file, indicate the volumes in which each char appears in order to ease the interpretation of communities. 
- but how ?
  - Boolean field for each vol? (lots of fields!)
  - 1 field = List of volumes (cannot use that with Gephi)
- Or compute a priori the most widespread volume represented in a community?
- Or do the same thing with narrative arcs instead?

Everything queries
dm:<2021-12-04T14:44 | dc:<2021-12-04T14:44 D:\Users\Vincent\eclipse\workspaces\Networks\NaNet\data\Thorgal file:
C:\Users\Vincent\eclipse\workspaces\Networks\NaNet\data\Thorgal file: !ext:pdf;graphml;png;csv;txt

..:: tentative alt names ::..
Graph Extraction and Analysis for Sequential Narratives GEASEN
Network extraction and analysis for sequential art narratives NEASAN
Extraction and Analysis of Character Networks from Graphic Novels EACNGN

-------------------------------
Clean code:
- separate the "window" part from the "scene" part
- move "filt"/"unfilt" in "scenes"
- nothing from "scene" in "comparison"
- in the logs, systematically print the filenames of the plots and csv (including post scripts)
- automate the comparison of node vs. node measures (same for edges) (in both directions n1 vs n2 and n2 vs n1)
- not normal to load the graph just to get the filtered characters >> should record them in a separate file
x merge the info & stats tables (if possible? check that first)
- record these tables and provide function to read them directly
- reapplt the corpus stats functions for the filtered data (after first net extraction) 

use nbr of occurrences (scenes) to plot vertex size (by default)? (instead of betweenness)
